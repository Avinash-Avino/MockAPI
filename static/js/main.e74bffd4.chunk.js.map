{"version":3,"sources":["App.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","App","classes","useState","product","setProduct","search","setSearch","getProductData","a","axios","get","data","console","log","useEffect","className","type","placeholder","onChange","e","target","value","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","filter","item","name","toLowerCase","includes","id","map","scope","ReactDOM","render","document","getElementById"],"mappings":"iSAYMA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAE9BC,KAAM,CACJC,SAAU,OANUV,CAQpBW,KAEEC,EAAiBZ,aAAW,SAACC,GAAD,MAAY,CAC5CY,KAAM,CACJ,qBAAsB,CACpBV,gBAAiBF,EAAMG,QAAQU,OAAOC,WAHrBf,CAMnBgB,KAEEC,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAkFCC,EA9EH,WACV,IAAMC,EAAUL,IAChB,EAA8BM,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,uCAAG,4BAAAC,EAAA,+EAEAC,IAAMC,IACvB,4DAHiB,OAEbC,EAFa,OAKnBC,QAAQC,IAAIF,EAAKA,MACjBP,EAAWO,EAAKA,MANG,gDAQnBC,QAAQC,IAAR,MARmB,yDAAH,qDAepB,OAHAC,qBAAU,WACRP,MACC,IAED,sBAAKQ,UAAU,MAAf,UACE,iDACA,4EACA,uBACEC,KAAK,OACLC,YAAY,cACZC,SAAU,SAACC,GACTb,EAAUa,EAAEC,OAAOC,UAOvB,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOV,UAAWd,EAAQH,MAAO4B,aAAW,mBAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAAChC,EAAA,EAAD,WACE,cAACjB,EAAD,wBACA,cAACA,EAAD,CAAiBkD,MAAM,QAAvB,0BAGJ,cAACC,EAAA,EAAD,UACG1B,EAAQ2B,QAAO,SAACC,GACb,MAAc,IAAV1B,GAGF0B,EAAKC,KAAKC,cAAcC,SAAS7B,EAAO4B,gBAKtCF,EAAKI,GAAGF,cAAcC,SAAS7B,EAAO4B,eAPjCF,OAMJ,KAONK,KAAI,SAACL,GACJ,OACE,eAACxC,EAAD,WACE,cAACb,EAAD,CAAiB6C,UAAU,KAAKc,MAAM,MAAtC,SACGN,EAAKC,OAER,cAACtD,EAAD,CAAiBkD,MAAM,QAAvB,SACGG,EAAKI,OALWJ,EAAKI,kBCrF5CG,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e74bffd4.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [product, setProduct] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getProductData = async () => {\r\n    try {\r\n      const data = await axios.get(\r\n        \"https://60e09b266b689e001788cb2c.mockapi.io/api/01/Avino\"\r\n      );\r\n      console.log(data.data);\r\n      setProduct(data.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductData();\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Avinash Moc API</h1>\r\n      <p>YOU CAN ALSO SEARCH WITH USERNAME OR USERID</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search here\"\r\n        onChange={(e) => {\r\n          setSearch(e.target.value);\r\n        }}\r\n      />\r\n     \r\n\r\n     \r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>User Name</StyledTableCell>\r\n              <StyledTableCell align=\"right\">User ID</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {product.filter((item) => {\r\n                if (search == \"\") {\r\n                  return item;\r\n                } else if (\r\n                  item.name.toLowerCase().includes(search.toLowerCase())\r\n                ) {\r\n                  return item;\r\n                }\r\n                else if(\r\n                    item.id.toLowerCase().includes(search.toLowerCase())\r\n                ){\r\n                    return item;\r\n                }\r\n                \r\n              })\r\n              .map((item) => {\r\n                return (\r\n                  <StyledTableRow key={item.id}>\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {item.name}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      {item.id}\r\n                    </StyledTableCell>\r\n                  </StyledTableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n    <App/>\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}